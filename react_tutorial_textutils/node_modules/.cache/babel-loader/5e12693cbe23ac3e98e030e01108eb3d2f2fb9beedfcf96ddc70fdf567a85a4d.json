{"ast":null,"code":"var _s = $RefreshSig$();\n// ROUTER\n\nimport { useState } from 'react';\nimport './App.css';\nimport AboutSection from './components/about';\nimport Navbar from './components/navbar_props';\nimport TextForm from './components/textForm_state';\nimport Alert from './components/alert';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [colorPal, setcolorPal] = useState('primary');\n  const [alert, setAlert] = useState(null);\n  let showAlert = (type, message) => {\n    setAlert({\n      msg: message,\n      typ: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  let removeColor = () => {\n    document.body.classList.remove('bg-primary');\n    document.body.classList.remove('bg-success');\n    document.body.classList.remove('bg-danger');\n    document.body.classList.remove('bg-warning');\n  };\n  let toggleColor = cls => {\n    removeColor();\n    document.body.classList.add('bg-' + cls);\n    document.body.style.color = 'white';\n    setcolorPal('light');\n  };\n  let toggleMode = () => {\n    removeColor();\n    setcolorPal('primary');\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'black';\n      document.body.style.color = 'white';\n      showAlert(\"success\", \"The Dark Mode has been enabled.\");\n      document.title = \"TextUtils - Dark Mode\";\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black';\n      showAlert(\"success\", \"The Light Mode has been enabled.\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(App, \"RsM5edHcNRBm0YDaeWDHq9OMybA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","AboutSection","Navbar","TextForm","Alert","BrowserRouter","Routes","Route","Fragment","_Fragment","jsxDEV","_jsxDEV","App","_s","mode","setMode","colorPal","setcolorPal","alert","setAlert","showAlert","type","message","msg","typ","setTimeout","removeColor","document","body","classList","remove","toggleColor","cls","add","style","color","toggleMode","backgroundColor","title","_c","$RefreshReg$"],"sources":["D:/Web_Development/React_JS/react_tutorial_textutils/src/App.js"],"sourcesContent":["\n// ROUTER\n\nimport { useState } from 'react';\nimport './App.css';\nimport AboutSection from './components/about';\nimport Navbar from './components/navbar_props';\nimport TextForm from './components/textForm_state';\nimport Alert from './components/alert'\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\nfunction App() {\n\n  const [mode, setMode] = useState('light')\n  const [colorPal, setcolorPal] = useState('primary')\n  const [alert, setAlert] = useState(null)\n\n  let showAlert = (type, message) => {\n    setAlert({\n      msg: message,\n      typ: type\n    })\n\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000)\n  }\n\n  let removeColor = () => {\n    document.body.classList.remove('bg-primary')\n    document.body.classList.remove('bg-success')\n    document.body.classList.remove('bg-danger')\n    document.body.classList.remove('bg-warning')\n  }\n\n  let toggleColor = (cls) => {\n    removeColor()\n    document.body.classList.add('bg-' + cls)\n    document.body.style.color = 'white'\n    setcolorPal('light')\n  }\n\n  let toggleMode = () => {\n    removeColor()\n    setcolorPal('primary')\n    if (mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = 'black'\n      document.body.style.color = 'white'\n      showAlert(\"success\", \"The Dark Mode has been enabled.\")\n      document.title = \"TextUtils - Dark Mode\"\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      document.body.style.color = 'black'\n      showAlert(\"success\", \"The Light Mode has been enabled.\")\n      document.title = \"TextUtils - Light Mode\"\n    }\n  }\n\n  return (\n    <>\n    \n      {/* <BrowserRouter>\n        <Navbar title=\"TextUtils\" about='About' mode={mode} toggleColor={toggleColor} toggleMode={toggleMode} />\n        <Navbar mode={mode} toggleColor={toggleColor} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Routes>\n            <Route exact path='/about' element={<AboutSection />} />\n            <Route path='/' element={<TextForm heading='Enter your text to analyze' showAlert={showAlert} mode={mode} colorPal={colorPal} />} />\n          </Routes>\n        </div>\n      </BrowserRouter > */}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";AACA;;AAEA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,YAAY,MAAM,oBAAoB;AAC7C,OAAOC,MAAM,MAAM,2BAA2B;AAC9C,OAAOC,QAAQ,MAAM,6BAA6B;AAClD,OAAOC,KAAK,MAAM,oBAAoB;AACtC,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,SAAS,CAAC;EACnD,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAExC,IAAIoB,SAAS,GAAGA,CAACC,IAAI,EAAEC,OAAO,KAAK;IACjCH,QAAQ,CAAC;MACPI,GAAG,EAAED,OAAO;MACZE,GAAG,EAAEH;IACP,CAAC,CAAC;IAEFI,UAAU,CAAC,MAAM;MACfN,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,IAAIO,WAAW,GAAGA,CAAA,KAAM;IACtBC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,YAAY,CAAC;IAC5CH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,YAAY,CAAC;IAC5CH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,WAAW,CAAC;IAC3CH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,YAAY,CAAC;EAC9C,CAAC;EAED,IAAIC,WAAW,GAAIC,GAAG,IAAK;IACzBN,WAAW,CAAC,CAAC;IACbC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACI,GAAG,CAAC,KAAK,GAAGD,GAAG,CAAC;IACxCL,QAAQ,CAACC,IAAI,CAACM,KAAK,CAACC,KAAK,GAAG,OAAO;IACnClB,WAAW,CAAC,OAAO,CAAC;EACtB,CAAC;EAED,IAAImB,UAAU,GAAGA,CAAA,KAAM;IACrBV,WAAW,CAAC,CAAC;IACbT,WAAW,CAAC,SAAS,CAAC;IACtB,IAAIH,IAAI,KAAK,OAAO,EAAE;MACpBC,OAAO,CAAC,MAAM,CAAC;MACfY,QAAQ,CAACC,IAAI,CAACM,KAAK,CAACG,eAAe,GAAG,OAAO;MAC7CV,QAAQ,CAACC,IAAI,CAACM,KAAK,CAACC,KAAK,GAAG,OAAO;MACnCf,SAAS,CAAC,SAAS,EAAE,iCAAiC,CAAC;MACvDO,QAAQ,CAACW,KAAK,GAAG,uBAAuB;IAC1C,CAAC,MACI;MACHvB,OAAO,CAAC,OAAO,CAAC;MAChBY,QAAQ,CAACC,IAAI,CAACM,KAAK,CAACG,eAAe,GAAG,OAAO;MAC7CV,QAAQ,CAACC,IAAI,CAACM,KAAK,CAACC,KAAK,GAAG,OAAO;MACnCf,SAAS,CAAC,SAAS,EAAE,kCAAkC,CAAC;MACxDO,QAAQ,CAACW,KAAK,GAAG,wBAAwB;IAC3C;EACF,CAAC;EAED,oBACE3B,OAAA,CAAAF,SAAA,mBAaE,CAAC;AAEP;AAACI,EAAA,CAlEQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAoEZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}