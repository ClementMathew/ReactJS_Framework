{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web_Development\\\\React_JS\\\\react_tutorial\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport AboutSection from './components/about';\nimport Navbar from './components/navbar_props';\nimport TextForm from './components/textForm_state';\nimport Alert from './components/alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [theAlert, showAlert] = useState();\n  let toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'black';\n      document.body.style.color = 'white';\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      about: \"About\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: \"This is Alert !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(TextForm, {\n        heading: \"Enter your text to analyze\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AboutSection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"PzSLu6MIFTj5KOuMcs4fGRDYY+8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","AboutSection","Navbar","TextForm","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","theAlert","showAlert","toggleMode","document","body","style","backgroundColor","color","children","title","about","fileName","_jsxFileName","lineNumber","columnNumber","alert","className","heading","_c","$RefreshReg$"],"sources":["D:/Web_Development/React_JS/react_tutorial/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport AboutSection from './components/about';\nimport Navbar from './components/navbar_props';\nimport TextForm from './components/textForm_state';\nimport Alert from './components/alert'\n\nfunction App() {\n\n  const [mode, setMode] = useState('light')\n\n  const [theAlert,showAlert] = useState()\n\n  let toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = 'black'\n      document.body.style.color = 'white'\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      document.body.style.color = 'black'\n    }\n  }\n\n  return (\n    <>\n      <Navbar title=\"TextUtils\" about='About' mode={mode} toggleMode={toggleMode} />\n      <Navbar mode={mode} toggleMode={toggleMode} />\n      <Alert alert=\"This is Alert !\" />\n      <div className=\"container my-3\">\n        <TextForm heading='Enter your text to analyze' mode={mode} />\n        <AboutSection />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,YAAY,MAAM,oBAAoB;AAC7C,OAAOC,MAAM,MAAM,2BAA2B;AAC9C,OAAOC,QAAQ,MAAM,6BAA6B;AAClD,OAAOC,KAAK,MAAM,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,OAAO,CAAC;EAEzC,MAAM,CAACa,QAAQ,EAACC,SAAS,CAAC,GAAGd,QAAQ,CAAC,CAAC;EAEvC,IAAIe,UAAU,GAAGA,CAAA,KAAM;IACrB,IAAIJ,IAAI,KAAK,OAAO,EAAE;MACpBC,OAAO,CAAC,MAAM,CAAC;MACfI,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,KAAK,GAAG,OAAO;IACrC,CAAC,MACI;MACHR,OAAO,CAAC,OAAO,CAAC;MAChBI,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,KAAK,GAAG,OAAO;IACrC;EACF,CAAC;EAED,oBACEd,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACEf,OAAA,CAACJ,MAAM;MAACoB,KAAK,EAAC,WAAW;MAACC,KAAK,EAAC,OAAO;MAACZ,IAAI,EAAEA,IAAK;MAACI,UAAU,EAAEA;IAAW;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9ErB,OAAA,CAACJ,MAAM;MAACS,IAAI,EAAEA,IAAK;MAACI,UAAU,EAAEA;IAAW;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9CrB,OAAA,CAACF,KAAK;MAACwB,KAAK,EAAC;IAAiB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjCrB,OAAA;MAAKuB,SAAS,EAAC,gBAAgB;MAAAR,QAAA,gBAC7Bf,OAAA,CAACH,QAAQ;QAAC2B,OAAO,EAAC,4BAA4B;QAACnB,IAAI,EAAEA;MAAK;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7DrB,OAAA,CAACL,YAAY;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC;EAAA,eACN,CAAC;AAEP;AAACjB,EAAA,CA9BQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}